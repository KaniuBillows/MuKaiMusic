<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>mukaiMusic\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <RootNamespace>MuKai_Music</RootNamespace>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <PlatformTarget>x64</PlatformTarget>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
    <Optimize>false</Optimize>
    <NoWarn>1701;1702;1591</NoWarn>
  </PropertyGroup>

 
  
  <ItemGroup>
    <PackageReference Include="BouncyCastle.NetCore" Version="1.8.6" />
    <PackageReference Include="Grpc.AspNetCore" Version="2.28.0" />
    <PackageReference Include="Grpc.Net.ClientFactory" Version="2.28.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.Http" Version="2.2.2" />
    <PackageReference Include="Microsoft.AspNetCore.Http.Abstractions" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="3.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.ResponseCaching" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="3.1.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.2">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="3.1.3" />
    <PackageReference Include="Microsoft.Extensions.Identity.Core" Version="3.1.3" />
    <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="3.1.2" />
    <PackageReference Include="Microsoft.TestPlatform.TestHost" Version="16.5.0" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="3.1.2" />
    <PackageReference Include="NSwag.AspNetCore" Version="13.3.0" />
    <PackageReference Include="StackExchange.Redis" Version="2.1.28" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="6.5.0" />
    <PackageReference Include="System.Text.Json" Version="4.7.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="mukaiMusic\dist\**" />
    <Compile Remove="wwwroot\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="mukaiMusic\dist\**" />
    <Content Remove="wwwroot\**" />
    <EmbeddedResource Remove="mukaiMusic\dist\**" />
    <EmbeddedResource Remove="wwwroot\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="mukaiMusic\dist\**" />
    <None Remove="wwwroot\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="mukaiMusic\dist\muKaiMusic\3rdpartylicenses.txt" />
    <None Remove="mukaiMusic\dist\muKaiMusic\5-es2015.13ed77b944d74b5e0a7e.js" />
    <None Remove="mukaiMusic\dist\muKaiMusic\5-es5.13ed77b944d74b5e0a7e.js" />
    <None Remove="mukaiMusic\dist\muKaiMusic\6-es2015.9726157e1310ef1fca91.js" />
    <None Remove="mukaiMusic\dist\muKaiMusic\6-es5.9726157e1310ef1fca91.js" />
    <None Remove="mukaiMusic\dist\muKaiMusic\assets\img\logo.png" />
    <None Remove="mukaiMusic\dist\muKaiMusic\favicon.ico" />
    <None Remove="mukaiMusic\dist\muKaiMusic\index.html" />
    <None Remove="mukaiMusic\dist\muKaiMusic\main-es2015.e00b67e7597a987f4463.js" />
    <None Remove="mukaiMusic\dist\muKaiMusic\main-es5.e00b67e7597a987f4463.js" />
    <None Remove="mukaiMusic\dist\muKaiMusic\polyfills-es2015.ca64e4516afbb1b890d5.js" />
    <None Remove="mukaiMusic\dist\muKaiMusic\polyfills-es5.277e2e1d6fb2daf91a5c.js" />
    <None Remove="mukaiMusic\dist\muKaiMusic\runtime-es2015.4cd82bd19c72d06844b2.js" />
    <None Remove="mukaiMusic\dist\muKaiMusic\runtime-es5.4cd82bd19c72d06844b2.js" />
    <None Remove="mukaiMusic\dist\muKaiMusic\styles.aa2098ce612a081f42a8.css" />
    <None Remove="Service\TokenProvider.cs~RF6df3c22.TMP" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\DataAbstract\DataAbstract.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Protobuf Include="..\DataAbstract\Protos\*.proto" GrpcServices="Client" Link="Protos\%(RecursiveDir)%(Filename)%(Extension)" />
  </ItemGroup>
  
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <ProjectExtensions>
    <VisualStudio><UserProperties appsettings_1development_1json__JsonSchema="http://json.schemastore.org/appsettings" /></VisualStudio>
  </ProjectExtensions>

</Project>
